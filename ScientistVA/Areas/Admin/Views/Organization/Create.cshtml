@using System.Web.Mvc
@using BELibrary.Entity
@model Organization
@{
    ViewBag.Title = ViewBag.Feature + " " + ViewBag.Element;
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    //var dateOfBirth = Model != null ? Model.DateOfBirth.ToString("yyyy-MM-dd") : DateTime.Now.AddYears(-18).ToString("yyyy-MM-dd");
    //var gender = (Model != null) ? Model.Gender : true;
}
<div class="row">
    <div class="col-sm-12">
        <form method="post" id="form">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (ViewBag.isEdit)
            {
                <input type="hidden" value="true" name="isEdit" />
                <input type="hidden" value="@Model.Id" name="Id" />
            }
            else
            {
                <input type="hidden" value="false" name="isEdit" />
            }

            <input type="hidden" value="false" name="isSaveAs" />


            <div class="row">
                <div class="col-md-6">
                    <div class="panel">
                        @*<div class="panel-heading">
                            <h3 class="panel-title">Basic Form Elements</h3>
                        </div>*@

                        <div class="panel-body form-horizontal form-padding">

                            <!-- BASIC FORM ELEMENTS -->
                            <!--===================================================-->
                            <!--Text Input-->
                            <div class="form-group">
                                <label class="col-md-2 control-label">Logo</label>
                                <div class="col-md-10">
                                    <div>

                                        @if (ViewBag.isEdit)
                                        {
                                            <img class="img img-thumbnail mar-btm" id="ImgAvt" style="width: 200px" src="@Model.Logo" alt="" />
                                        }
                                        else
                                        {
                                            <img class="img img-thumbnail mar-btm" id="ImgAvt" style="width: 200px; min-height:210px" src="" alt="" />
                                        }
                                        <div class="input-group mar-btm">
                                            @Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                            <span class="input-group-btn" onclick="ChooseImgAvatar()">
                                                <a class="btn btn-mint btn-icon"><i class="fa fa-cloud-upload icon-lg"></i></a>
                                            </span>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-2 control-label">Name</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-2 control-label">Founded year </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Founded_year, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">Areas of AI expertise</label>
                                <div class="col-md-10">
                                    @Html.DropDownList("InterestedTopic", (SelectList)ViewBag.InterestedTopic,
                                   new { @class = "form-control", @required = "required", id = "interestedTopic" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-2 control-label">Areas of AI expertise </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Areas_of_AI, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">Business type</label>
                                <div class="col-md-10">
                                    @Html.DropDownList("Business_type", (SelectList)ViewBag.BusinessType,
                                   new { @class = "form-control", @required = "required", id = "Business_type" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-2 control-label">Ownership type</label>
                                <div class="col-md-10">
                                    @Html.DropDownList("Ownership_type", (SelectList)ViewBag.OwnershipType,
                                   new { @class = "form-control", @required = "required", id = "Ownership_type" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Scale
                                </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Scale, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Number of Staff
                                </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Number_of_Staff, new { htmlAttributes = new { @class = "form-control",  @type = "number" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Number of AI Staff
                                </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Number_of_AI_Staff, new { htmlAttributes = new { @class = "form-control",  @type = "number" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Headquarter Address
                                </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Headquarter_Address, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Website
                                </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Telephone
                                </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">Email</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">Country</label>
                                <div class="col-md-10">
                                    @Html.DropDownList("Country", (SelectList)ViewBag.Nationality,
                                   new { @class = "form-control", @required = "required", id = "Country" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Interested topics for international cooperation in AI (especially with Australian partners):
                                </label>
                                <div class="col-md-10">
                                    @Html.DropDownList("Interested_topics", (SelectList)ViewBag.InterestedTopic,
                                 new { multiple = "multiple", @class = "form-control", @required = "required", id = "Interested_topics" })
                                </div>
                            </div>

                            <!--===================================================-->
                            <!-- END BASIC FORM ELEMENTS -->

                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="panel">
                        @*<div class="panel-heading">
                            <h3 class="panel-title">Basic Form Elements</h3>
                        </div>*@
                        <!-- BASIC FORM ELEMENTS -->
                        <!--===================================================-->
                        <div class="panel-body form-horizontal form-padding">


                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Organization summary
                                </label>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Organization_summary, new { @class = "form-control", @rows = "14" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Development plan for next 3-5 years in AI:
                                </label>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Development_plan, new { @class = "form-control", @rows = "10" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Customers and partners:
                                </label>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Customers_and_partners, new { @class = "form-control", @rows = "5" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label">
                                    Selected AI products:
                                </label>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Selected_AI_products, new { @class = "form-control", @rows = "5", @id = "Selected_AI_products" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div style="display: flex; justify-content: center; align-content: center; align-items: center" class="pad-all">
                        <button class="btn btn-mint" style="margin-right: 10px" type="submit">Save</button>
                        <button class="btn btn-warning" type="reset" onclick="goBack()">Cancel</button>
                    </div>

                </div>
            </div>


        </form>
    </div>
</div>

@section Scripts {

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDMyiVgN9rodizCjq6WoTVQPwEYIZj_mgc"></script>
    <script src="~/Areas/Admin/Content/js/address-lookup.js"></script>
    <script>
        $("#lookup").addressLookup({
            "input": "#address-lookup"
        })
    </script>

    <script>

        $(document).ready(function () {

            $("#Interested_topics").select2();
            if ($("input[name=Id]").val()) {

                const Interested_topics = JSON.parse('@Html.Raw(Json.Encode(ViewBag.SelectedInterestedTopic))');

                $('#Interested_topics').val(Interested_topics);
                $('#Interested_topics').trigger('change');

                const BusinessTypeSelected = JSON.parse('@Html.Raw(Json.Encode(ViewBag.BusinessTypeSelected))');

                $('#Business_type').val(BusinessTypeSelected);
                $('#Business_type').trigger('change');

                const OwnershipTypeSelected = JSON.parse('@Html.Raw(Json.Encode(ViewBag.OwnershipTypeSelected))');

                $('#Ownership_type').val(OwnershipTypeSelected);
                $('#Ownership_type').trigger('change');

                const NationalitySelected = JSON.parse('@Html.Raw(Json.Encode(ViewBag.NationalitySelected))');

                $('#Country').val(NationalitySelected);
                $('#Country').trigger('change');
            }



            CKEDITOR.replace("Selected_AI_products", {
                height: 200,
                language: 'en'
            });

            CKEDITOR.config.toolbar = [
                ['Styles', 'Format', 'Font', 'FontSize'],
                '/',
                ['Bold', 'Italic', 'Underline', 'StrikeThrough', '-', 'Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste', 'Find', 'Replace', '-', 'Outdent', 'Indent', '-', 'Print'],
                '/',
                ['NumberedList', 'BulletedList', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
                ['Image', 'Table', '-', 'Link', 'Flash', 'Smiley', 'TextColor', 'BGColor', 'Source']
            ];


        });
        const baseUrl = '/admin/Organization';
        function goBack() {
            @*const id = $('input[name="Id"]').val();
            window.location.href = `/home/get?id=${id}`;*@
            window.location.href = baseUrl;
        }
        $("#Logo").change(function () {
            const imgSrc = $("input[name=Logo]").val();
            if (imgSrc !== "") {
                $("#ImgAvt").attr("src", imgSrc);
            }
        });
        function ChooseImgAvatar() {
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#ImgAvt").attr("src", fileUrl);
                $("#Logo").val(fileUrl);
            }
            finder.popup();
        }


        // Valid
        const fields = {
            Name: {
                container: 'tooltip',
                validators: {
                    notEmpty: {
                        message: 'The name is required and cannot be left blank'
                    }
                }
            },

        }
        validator.valid('form', fields, (e) => {
            e.preventDefault();
            var content = CKEDITOR.instances['Selected_AI_products'].getData();
            if (content.length <= 0) {
                $.niftyNoty({
                    type: 'danger',
                    icon: 'fa fa-minus',
                    message: "The content must not be empty",
                    container: 'floating',
                    timer: 3000
                });
                return;
            }
            var formData = new FormData(document.getElementById('form'));
            formData.set("Selected_AI_products", content);

            let interestedTopics = $("#Interested_topics").val();

            let interestedTopicJoin = interestedTopics.join();

            formData.set("Interested_topics", interestedTopicJoin);

            ajax.createOrUpdate(`${baseUrl}/CreateOrEdit`, formData,
                (response) => {
                    if (response.status) {
                        notify.push(response.mess, notify.EType.SUCCESS);
                        notify.loading();
                        window.location.href = baseUrl;
                    } else {
                        notify.push(response.mess, notify.EType.DANGER);
                        $(':input[type="submit"]').prop('disabled', false);
                    }
                },
                (jqXhr, textStatus) => {
                    const mess = `Request failed: ${textStatus}`;
                    notify.push(mess, notify.EType.DANGER);
                    $(':input[type="submit"]').prop('disabled', false);
                }
            );
        });
    </script>
}